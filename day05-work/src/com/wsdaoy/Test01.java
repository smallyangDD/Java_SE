package com.wsdaoy;

public class Test01 {
//    1.类是一个用户创建的一组相关属性和行为的集合，对象是一类实物的具体表现，是类的实例，具备类的属性和行为。
//    2.创建一个类的java文件在class关键字内添加属性和行为，包含类名、构造函数、成员变量、成员方法。
//    3.在类的方法中通过new关键字实例化对象，对象的成员变量、成员方法使用"."方法来进行使用。
//    4.在类的位置不同
//	        成员变量：类中，方法外  局部变量：方法中或者方法声明上（形式参数）
//      作用的范围不一样
//	        成员变量：类中   局部变量：方法中
//      初始化值的不同
//	        成员变量：有默认值   局部变量：没有默认值。必须定义，赋值，才能使用
//      在内存中的位置不同
//	        成员变量：堆内存   局部变量：栈内存
//      生命周期不同
//      	成员变量：随着对象创建而存在，随着对象的消失而消失
// 	        局部变量：随着方法的调用而存在，随着方法的调用完毕而消失
//    5.构造方法和成员方法的区别：
//          构造方法名与类名一致
//          传参的方式不同，构造方法是在实例时对象的时传入参数，构造方法是在实例后对象的时传入参数。
//          如果用户未创建构造函数系统默认创建无参的构造函数。
//    6.封装可以被认为是一个成员变量保护屏障，防止该类的代码和数据被其他类随意访问。要访问该类的数据，必须通过指定的方式。
//    适当的封装可以让代码更容易理解与维护，也加强了代码的安全性
}
